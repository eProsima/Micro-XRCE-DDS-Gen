// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// internal plugins
apply plugin: 'java'
apply plugin: 'eclipse' // Eclipse integration

description = """"""

repositories {
    mavenCentral()
}

dependencies {
    compile files('thirdparty/IDL-Parser/build/libs/idlparser-1.0.0.jar')
}

task buildIDLParser(type: GradleBuild) {
    buildFile = 'thirdparty/IDL-Parser/idl.gradle'
    tasks = ['clean', 'build']
}

task copyResources {
    // Create directory
    File outputDir = file(new File(buildDir, "resources/main"))
    outputDir.exists() || outputDir.mkdirs()

    // Create version file
    Properties pversion = new Properties()
    project.hasProperty('customversion') ? pversion.setProperty('version', project.customversion.toString()) : pversion.setProperty('version', '0.0.0')
    File versionFile = new File("${project.buildDir}/resources/main/version")
    versionFile.createNewFile();
    pversion.store(versionFile.newWriter(), null)
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }

        resources {
            srcDir 'src'
            include '**/*.stg'
        }
    }
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    baseName = 'micrortpsgen'
    destinationDir = file(new File(projectDir, 'share/micrortps'))
    manifest {
        attributes("Created-By": "eProsima", "Main-Class": "com.eprosima.micrortps.micrortpsgen")
    }
}

compileJava.dependsOn buildIDLParser
compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}


task testCodeGen(type: JavaExec) {
    File outputDir = file("${project.buildDir}/test")
    outputDir.exists() || outputDir.mkdirs()

    main = '-jar';
    args = [
        'share/micrortps/micrortpsgen.jar',
        '-replace',
        '-example',
        '-test',
        '-write-access-profile',
        'test/IncludeType.idl',
        'test/TestType.idl',
        '-d',
        outputDir,
    ]
}
